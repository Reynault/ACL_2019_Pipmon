@startuml
package tile{

    class Tile{
        + draw(image: BufferedImage)
        + action(maze: Maze, entity: Entity)
        + canBeCrossed(): boolean
        + isStairs(): boolean
    }

    class Wall{
        + draw(image: BufferedImage)
        + action(maze: Maze, entity: Entity)
        + canBeCrossed(): boolean
        + isStairs(): boolean
    }

    class Treasure{
        + draw(image: BufferedImage)
        + action(maze: Maze, entity: Entity)
        + canBeCrossed(): boolean
        + isStairs(): boolean
    }

    class Trap{
        + draw(image: BufferedImage)
        + action(maze: Maze, entity: Entity)
        + canBeCrossed(): boolean
        + isStairs(): boolean
    }

    abstract Effect{
        + {abstract} draw(image: BufferedImage)
        + {abstract} action(maze: Maze, entity: Entity)
        + {abstract} canBeCrossed(): boolean
        + {abstract} isStairs(): boolean
    }

    class Stairs{
        + draw(image: BufferedImage)
        + action(maze: Maze, entity: Entity)
        + canBeCrossed(): boolean
        + isStairs(): boolean
    }

    class TileFactory << (S,#FF7700) Singleton >>{
        + getWall(): Tile
        + getTrap(): Tile
        + getTreasure(): Tile
        + getEmptyTile(): Tile
    }

}

Wall --|> Effect
Effect --|> Tile
Effect --> "1" Tile : -decore
Trap --|> Effect
Treasure --|> Effect
Stairs --|> Effect

TileFactory ..> Tile : create

@enduml