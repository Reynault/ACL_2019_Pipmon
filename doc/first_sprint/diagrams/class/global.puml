@startuml

package dungeon{

    class Dungeon{

    }

    class Maze{
        + draw()
    }

    package tile{

        class Tile{
            + draw()
        }

        note "Class diagram of tiles" as N1

    }

    package entity{

        abstract Entity{
            - hp: int
            + {abstract} draw()
        }

        class Hero << (S,#FF7700) Singleton >>{

        }

        class EntityFactory << (S,#FF7700) Singleton >>{

        }

    }

    package mazeFactory{

        interface MazeFactory{

        }

        class MazeFile{

        }

        class MazeDefault{

        }

    }

}

enum GlobalDirection{
    + {static} UP
    + {static} DOWN
    + {static} LEFT
    + {static} RIGHT
}

MazeDefault -left-|> MazeFactory
Dungeon "1" -left-> "*" Maze: -maze
Dungeon "1" --> "1" MazeFactory: -mazeFactory
Maze "1" --> "*" Tile: -tiles
Maze "1" -up-> "*" Entity: -entities

EntityFactory ..> Entity : create

Hero --|> Entity
Dungeon "1" --> "1" Entity : -hero

MazeFile --|> MazeFactory

@enduml